{"version":3,"sources":["models/Entity.js","models/GameState.js","actions/initGameState.js","actions/updateGame.js","components/Score.js","components/Entity.js","components/Instructions.js","components/Renderer.js","components/App.js","actions/initInput.js","index.js","utils/createGameLoop.js","actions/renderGame.js"],"names":["_id","Entity","x","y","id","prevX","prevY","width","height","this","moveTo","dir","moveBy","Error","mapHeight","mapWidth","entity","isAt","e","prop","hasOwnProperty","val","GameState","tickDuration","tickTimer","score","highScore","Number","localStorage","getItem","tiles","apples","snake","movementDirection","segments","input","movementCommands","a","s","location","findEntityAt","getRandomLocation","random","movementCommand","push","length","shift","setItem","initGameState","game","updateGame","dt","updateInput","moveDir","i","prevSegment","moveSnake","isOutOfBounds","killSnake","checkSnakeOutOfBounds","snakeHead","segment","isCollidingWith","checkSnakeEatSelf","apple","eatApple","checkSnakeEatApple","tick","setScore","splice","indexOf","endTailSegment","last","newEndTailSegment","clone","getRandomEmptyLocation","spawnApple","Score","className","positionX","positionY","style","left","top","Instructions","position","repeat","Math","round","Renderer","mapWidthPx","mapHeightPx","map","t","App","KeyCode","window","document","body","addEventListener","keyCode","inputMovementCommand","updateKeyDown","cancelGameLoop","update","requestAnimationFrame","onFrame","time","running","lastTime","createGameLoop","ReactDOM","render","getElementById","renderGame"],"mappings":"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","file":"static/js/main.1e255127.chunk.js","sourcesContent":["let _id = 0;\r\n\r\nexport const ENTITY_DEFAULT_WIDTH = 32;\r\nexport const ENTITY_DEFAULT_HEIGHT = 32;\r\n\r\nexport default class Entity {\r\n  constructor(x, y) {\r\n    if (x) {\r\n      this.x = x;\r\n    }\r\n    if (y) {\r\n      this.y = y;\r\n    }\r\n    this.prevX = this.x;\r\n    this.prevY = this.y;\r\n  }\r\n\r\n  id = _id++;\r\n  x = 0;\r\n  y = 0;\r\n  prevX = 0;\r\n  prevY = 0;\r\n  width = ENTITY_DEFAULT_WIDTH;\r\n  height = ENTITY_DEFAULT_HEIGHT;\r\n\r\n  moveTo(x, y) {\r\n    this.prevX = this.x;\r\n    this.prevY = this.y;\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  moveBy(x, y) {\r\n    this.moveTo(this.x + x, this.y + y);\r\n  }\r\n\r\n  moveDir(dir) {\r\n    switch (dir) {\r\n      case 'left': return this.moveBy(-1, 0);\r\n      case 'right': return this.moveBy(1, 0);\r\n      case 'up': return this.moveBy(0, -1);\r\n      case 'down': return this.moveBy(0, 1);\r\n      default: throw new Error('Unknown movement direction ' + dir);\r\n    }\r\n  }\r\n\r\n  isOutOfBounds(mapHeight, mapWidth) {\r\n    return this.x < 0 || this.y < 0 || this.x >= mapWidth || this.y >= mapHeight;\r\n  }\r\n\r\n  isCollidingWith(entity) {\r\n    return this.isAt(entity.x, entity.y);\r\n  }\r\n\r\n  isAt(x, y) {\r\n    return this.x === x && this.y === y;\r\n  }\r\n\r\n  clone() {\r\n    const e = new Entity();\r\n    for (const prop in this) {\r\n      if (this.hasOwnProperty(prop) && prop !== 'id') {\r\n        const val = this[prop];\r\n        if (typeof val !== 'function') {\r\n          e[prop] = val;\r\n        }\r\n      }\r\n    }\r\n    return e;\r\n  }\r\n}","import random from 'lodash/random';\r\nimport {ENTITY_DEFAULT_WIDTH, ENTITY_DEFAULT_HEIGHT} from './Entity';\r\n\r\nconst MOVEMENT_COMMAND_QUEUE_SIZE = 4;\r\n\r\nexport default class GameState {\r\n  mapWidth = 16;\r\n  mapHeight = 16;\r\n  tickDuration = 200;\r\n  tickTimer = 0;\r\n  score = 0;\r\n  highScore = Number(localStorage.getItem('game.highScore')) || 0;\r\n  tiles = [];\r\n  apples = [];\r\n  snake = {\r\n    movementDirection: 'up',\r\n    segments: [],\r\n  };\r\n  input = {\r\n    movementCommands: [],\r\n  };\r\n\r\n  findEntityAt(x, y) {\r\n    for (const a of this.apples) {\r\n      if (a.isAt(x, y)) {\r\n        return a;\r\n      }\r\n    }\r\n    for (const s of this.snake.segments) {\r\n      if (s.isAt(x, y)) {\r\n        return s;\r\n      }\r\n    }\r\n  }\r\n\r\n  getRandomEmptyLocation() {\r\n    let location;\r\n    while (!location || this.findEntityAt(location.x, location.y)) {\r\n      location = this.getRandomLocation();\r\n    }\r\n    return location;\r\n  }\r\n\r\n  getRandomLocation() {\r\n    return {\r\n      x: random(this.mapWidth - 1),\r\n      y: random(this.mapHeight - 1),\r\n    }\r\n  }\r\n\r\n  inputMovementCommand(movementCommand) {\r\n    this.input.movementCommands.push(movementCommand);\r\n    while (this.input.movementCommands.length > MOVEMENT_COMMAND_QUEUE_SIZE) {\r\n      this.input.movementCommands.shift();\r\n    }\r\n  }\r\n\r\n  get mapHeightPx() {\r\n    return this.mapHeight * ENTITY_DEFAULT_HEIGHT;\r\n  }\r\n\r\n  get mapWidthPx() {\r\n    return this.mapWidth * ENTITY_DEFAULT_WIDTH;\r\n  }\r\n\r\n  setScore(score) {\r\n    this.score = score;\r\n    if (score > this.highScore) {\r\n      this.highScore = score;\r\n      localStorage.setItem('game.highScore', this.highScore);\r\n    }\r\n  }\r\n}","import Entity from '../models/Entity';\r\n\r\nexport default function initGameState(game) {\r\n  game.tickDuration = 120;\r\n  game.tickTimer = 0;\r\n  game.score = 0;\r\n  game.highScore = Number(localStorage.getItem('game.highScore')) || 0;\r\n  game.input.movementCommands = ['up'];\r\n\r\n  game.tiles.length = 0;\r\n  for (let x = 0; x < game.mapWidth; x++) {\r\n    for (let y = 0; y < game.mapWidth; y++) {\r\n      game.tiles.push(new Entity(x, y));\r\n    }\r\n  }\r\n\r\n  if (game.apples.length !== 3) {\r\n    game.apples.length = 0;\r\n    game.apples.push(new Entity(0, 0));\r\n    game.apples.push(new Entity(0, 0));\r\n    game.apples.push(new Entity(0, 0));\r\n  }\r\n  game.apples[0].moveTo(1, 3);\r\n  game.apples[1].moveTo(7, 2);\r\n  game.apples[2].moveTo(5, 9);\r\n\r\n  game.snake.movementDirection = 'up';\r\n  game.snake.segments.length = 0;\r\n  game.snake.segments.push(new Entity(4, 4));\r\n  game.snake.segments.push(new Entity(4, 5));\r\n  game.snake.segments.push(new Entity(5, 5));\r\n  game.snake.segments.push(new Entity(5, 6));\r\n  game.snake.segments.push(new Entity(5, 7));\r\n}","import initGameState from './initGameState';\r\nimport Entity from '../models/Entity';\r\nimport last from 'lodash/last';\r\n\r\nexport default function updateGame(game, dt) {\r\n  game.tickTimer += dt;\r\n\r\n  game.tickDuration *= 0.9999;\r\n\r\n  if (game.tickTimer >= game.tickDuration) {\r\n    tick(game);\r\n    game.tickTimer = 0;\r\n  }\r\n}\r\n\r\nfunction tick(game) {\r\n  updateInput(game);\r\n\r\n  moveSnake(game.snake, game.snake.movementDirection);\r\n\r\n  checkSnakeOutOfBounds(game);\r\n  checkSnakeEatSelf(game);\r\n  checkSnakeEatApple(game);\r\n}\r\n\r\nfunction updateInput(game) {\r\n  const movementCommand = game.input.movementCommands.shift();\r\n  if (movementCommand) {\r\n    game.snake.movementDirection = movementCommand;\r\n  }\r\n}\r\n\r\nfunction moveSnake(snake, movementCommand) {\r\n  const head = snake.segments[0];\r\n\r\n  head.moveDir(movementCommand);\r\n\r\n  for (let i = 1; i < snake.segments.length; i++) {\r\n    const prevSegment = snake.segments[i - 1];\r\n    const currSegment = snake.segments[i];\r\n    currSegment.moveTo(prevSegment.prevX, prevSegment.prevY);\r\n  }\r\n}\r\n\r\nfunction checkSnakeOutOfBounds(game) {\r\n  if (game.snake.segments[0].isOutOfBounds(game.mapWidth, game.mapHeight)) {\r\n    killSnake(game);\r\n  }\r\n}\r\n\r\nfunction killSnake(game) {\r\n  initGameState(game);\r\n}\r\n\r\nfunction checkSnakeEatSelf(game) {\r\n  const snakeHead = game.snake.segments[0];\r\n  for (const segment of game.snake.segments) {\r\n    if (segment !== snakeHead && segment.isCollidingWith(snakeHead)) {\r\n      return killSnake(game);\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkSnakeEatApple(game) {\r\n  const snakeHead = game.snake.segments[0];\r\n  for (const apple of game.apples) {\r\n    if (snakeHead.isCollidingWith(apple)) {\r\n      return eatApple(game, apple);\r\n    }\r\n  }\r\n}\r\n\r\nfunction eatApple(game, apple) {\r\n  game.setScore(game.score + 1);\r\n\r\n  game.apples.splice(game.apples.indexOf(apple), 1);\r\n\r\n  const endTailSegment = last(game.snake.segments);\r\n  const newEndTailSegment = endTailSegment.clone();\r\n\r\n  newEndTailSegment.moveTo(endTailSegment.prevX, endTailSegment.prevY);\r\n  game.snake.segments.push(newEndTailSegment);\r\n  spawnApple(game);\r\n}\r\n\r\nfunction spawnApple(game) {\r\n  const {x, y} = game.getRandomEmptyLocation();\r\n  const apple = new Entity(x, y);\r\n  game.apples.push(apple);\r\n}","import React from 'react';\r\nimport './Score.css';\r\n\r\nexport default function Score({score}) {\r\n  return (\r\n    <div className=\"Score\">\r\n      {score}\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport './Entity.css';\r\n\r\nexport default function Entity({entity}) {\r\n  const positionX = entity.x * entity.width;\r\n  const positionY = entity.y * entity.height;\r\n  return (\r\n    <div className=\"Entity\"\r\n      style={{\r\n        width: entity.width,\r\n        height: entity.height,\r\n        left: positionX,\r\n        top: positionY,\r\n      }}\r\n    >\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport repeat from 'lodash/repeat';\r\nimport './Instructions.css';\r\n\r\nexport default function Instructions({game}) {\r\n  return (\r\n    <div className=\"Instructions\">\r\n      <p>use the arrow keys to move</p>\r\n      <p style={{position: 'relative', top: 0, left: -15}}>\r\n        eat apples!\r\n      </p>\r\n      {game.highScore\r\n        ? <p>\r\n            best {game.highScore} apple{game.highScore === 1 ? '' : 's'}{repeat('!', Math.round(game.highScore / 5))}\r\n          </p>\r\n        : null\r\n      }\r\n      <p style={{position: 'relative', top: 55, left: 55}}>\r\n        don't bite yourself :O\r\n      </p>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Score from './Score';\r\nimport Entity from './Entity';\r\nimport Instructions from './Instructions';\r\nimport './Renderer.css';\r\n\r\nexport default function Renderer({game}) {\r\n  return (\r\n    <div className=\"Renderer\" style={{width: game.mapWidthPx, height: game.mapHeightPx}}>\r\n      <ul className=\"Renderer-entities Renderer-layer\">\r\n        <ul className=\"Renderer-tiles Renderer-layer\">\r\n          {game.tiles.map((t) => (\r\n            <Entity key={t.id} entity={t}/>\r\n          ))}\r\n        </ul>\r\n        <ul className=\"Renderer-apples Renderer-layer\">\r\n          {game.apples.map((a) => (\r\n            <Entity key={a.id} entity={a}/>\r\n          ))}\r\n        </ul>\r\n        <ul className=\"Renderer-snake Renderer-layer\">\r\n          {game.snake.segments.map((s) => (\r\n            <Entity key={s.id} entity={s}/>\r\n          ))}\r\n        </ul>\r\n      </ul>\r\n      <Score score={game.score}/>\r\n      {game.score === 0 ? <Instructions game={game}/> : null}\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Renderer from './Renderer';\r\nimport './App.css';\r\n\r\nexport default function App({game}) {\r\n  return (\r\n    <div className=\"App\">\r\n      <Renderer game={game}/>\r\n    </div>\r\n  );\r\n}","\r\nexport default function initInput(game) {\r\n  document.body.addEventListener('keydown', (e) => {\r\n    updateKeyDown(game, e.keyCode);\r\n  });\r\n}\r\n\r\nexport const KeyCode = {\r\n  Up: 38,\r\n  Down: 40, \r\n  Left: 37,\r\n  Right: 39,\r\n};\r\n\r\nexport function updateKeyDown(game, keyCode) {\r\n  switch (keyCode) {\r\n    case KeyCode.Up:\r\n      game.inputMovementCommand('up');\r\n      break;\r\n    case KeyCode.Down:\r\n      game.inputMovementCommand('down');\r\n      break;\r\n    case KeyCode.Left:\r\n      game.inputMovementCommand('left');\r\n      break;\r\n    case KeyCode.Right:\r\n      game.inputMovementCommand('right');\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}","\nimport GameState from './models/GameState';\nimport initGameState from './actions/initGameState';\nimport createGameLoop from './utils/createGameLoop';\nimport updateGame from './actions/updateGame';\nimport renderGame from './actions/renderGame';\nimport initInput from './actions/initInput';\nimport './index.css';\n\nconst game = window.game = new GameState();\ninitGameState(game);\ninitInput(game);\n\nwindow.cancelGameLoop = createGameLoop((dt) => {\n  updateGame(game, dt);\n  renderGame(game);\n});","export default function createGameLoop(update) {\r\n    requestAnimationFrame(onFrame);\r\n  \r\n    let lastTime = 0;\r\n    let running = true;\r\n  \r\n    function onFrame(time) {\r\n      if (!running) {\r\n        return;\r\n      }\r\n      if (lastTime !== 0) {\r\n        update(time - lastTime);\r\n      }\r\n      lastTime = time;\r\n      requestAnimationFrame(onFrame);\r\n    }\r\n  \r\n    return function cancelGameLoop() {\r\n      running = false;\r\n    };\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from '../components/App';\r\n\r\nexport default function renderGame(game) {\r\n  ReactDOM.render(\r\n    <App game={game}/>,\r\n    document.getElementById('root')\r\n  );\r\n}"],"sourceRoot":""}